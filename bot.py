from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
import gspread
import os
import json
from keep_alive import keep_alive
import asyncio
from aiohttp import web

keep_alive()

# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è Google Sheets
google_creds_json = os.environ.get("GOOGLE_CREDS")
if not google_creds_json:
    raise Exception("GOOGLE_CREDS –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

creds_dict = json.loads(google_creds_json)
gc = gspread.service_account_from_dict(creds_dict)
sh = gc.open('CG 1')
worksheet = sh.sheet1

TOKEN = os.environ.get("BOT_TOKEN")
if not TOKEN:
    raise Exception("BOT_TOKEN –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def get_main_keyboard():
    keyboard = [
        ["–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç—Ä–µ–∫-–∫–æ–¥"],
        ["üì¶ –ê–¥—Ä–µ—Å –ò–≤—É –°–∞–º–æ–ª—ë—Ç", "üöõ –ê–¥—Ä–µ—Å –ì—É–∞–Ω—á–∂–æ—É –ö–∞–º–∞–∑"],
        ["üè¢ –ê–¥—Ä–µ—Å –î—É—à–∞–Ω–±–µ", "üìû –ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã"],
        ["üí¨ WhatsApp", "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    reply_markup = get_main_keyboard()
    await update.message.reply_text("–ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?", reply_markup=reply_markup)

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text

    if text == "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç—Ä–µ–∫-–∫–æ–¥":
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π —Ç—Ä–µ–∫-–∫–æ–¥:")
        context.user_data["wait_for_track"] = True
        return

    if context.user_data.get("wait_for_track"):
        context.user_data["wait_for_track"] = False
        user_code = text.strip()
        records = worksheet.get_all_records()

        found = False
        for record in records:
            if str(record.get("TrackingCode")).strip() == user_code:
                status = str(record.get("Status")).strip().lower()
                date = str(record.get("Date")).strip()
                if status == "arrived":
                    await update.message.reply_text(
                        f"‚úÖ –í–∞—à —Ç—Ä–µ–∫‚Äë–∫–æ–¥ –ø—Ä–∏–±—ã–ª –≤ –Ω–∞—à —Å–∫–ª–∞–¥ –≤ {date}. –ú–æ–∂–µ—Ç–µ –∑–∞–±—Ä–∞—Ç—å –µ–≥–æ.",
                        reply_markup=get_main_keyboard()
                    )
                else:
                    await update.message.reply_text(
                        "‚ùå–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à —Ç—Ä–µ–∫‚Äë–∫–æ–¥ –µ—â—ë –Ω–µ –ø–æ—Å—Ç—É–ø–∏–ª –∫ –Ω–∞–º.",
                        reply_markup=get_main_keyboard()
                    )
                found = True
                break

        if not found:
            await update.message.reply_text(
                "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à —Ç—Ä–µ–∫‚Äë–∫–æ–¥ –µ—â—ë –Ω–µ –ø–æ—Å—Ç—É–ø–∏–ª –∫ –Ω–∞–º.",
                reply_markup=get_main_keyboard()
            )
        return

    responses = {
        "üì¶ –ê–¥—Ä–µ—Å –ò–≤—É –°–∞–º–æ–ª—ë—Ç": "–ê–¥—Ä–µ—Å –ò–≤—É –°–∞–º–æ–ª—ë—Ç: Zhejiang, Yiwu, —É–ª–∏—Ü–∞, —Å–∫–ª–∞–¥ 123",
        "üöõ –ê–¥—Ä–µ—Å –ì—É–∞–Ω—á–∂–æ—É –ö–∞–º–∞–∑": "–ê–¥—Ä–µ—Å –ì—É–∞–Ω—á–∂–æ—É –ö–∞–º–∞–∑: Guangdong, Guangzhou, —É–ª–∏—Ü–∞, —Å–∫–ª–∞–¥ 456",
        "üè¢ –ê–¥—Ä–µ—Å –î—É—à–∞–Ω–±–µ": "–ù–∞—à —Å–∫–ª–∞–¥ –≤ –î—É—à–∞–Ω–±–µ: –ö–∞—Ä–∞–±–æ–ª–æ, –î–µ—Ö–∏ –±–æ–ª–æ 254/11",
        "üìû –ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã": "–¢–µ–ª–µ—Ñ–æ–Ω: +992208006726\n–ú–µ–Ω–µ–¥–∂–µ—Ä Telegram: @CobraT8te",
        "üí¨ WhatsApp": "–ù–∞–ø–∏—à–∏ –Ω–∞–º –≤ WhatsApp: https://wa.me/992208006726",
        "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é": "Hello bayka! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?"
    }

    if text in responses:
        await update.message.reply_text(responses[text], reply_markup=get_main_keyboard())
    else:
        await update.message.reply_text("–Ø –Ω–µ –ø–æ–Ω—è–ª, –≤—ã–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É —Å –∫–Ω–æ–ø–∫–∏ üôÇ", reply_markup=get_main_keyboard())

# ========== AIOHTTP –∏ Telegram Webhook ==========

async def main():
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    async def webhook_handler(request):
        data = await request.json()
        update = Update.de_json(data, app.bot)
        await app.process_update(update)
        return web.Response()

    await app.initialize()
    await app.bot.set_webhook("https://my-bot-s97n.onrender.com")
    await app.start()
    print("Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –±–æ—Ç –∑–∞–ø—É—â–µ–Ω...")

    web_app = web.Application()
    web_app.router.add_post("/", webhook_handler)
    runner = web.AppRunner(web_app)
    await runner.setup()
    site = web.TCPSite(runner, "0.0.0.0", 10000)
    await site.start()

    await asyncio.Event().wait()  # –ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ

if __name__ == "__main__":
    asyncio.run(main())
